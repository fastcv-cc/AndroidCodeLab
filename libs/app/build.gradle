plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.protobuf'
}

android {
    compileSdk rootProject.ext.androidVersion.compileSdk

    defaultConfig {
        minSdk rootProject.ext.androidVersion.minSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        main{
            res.srcDirs += ['src/main/res_logger','src/main/res_local_data_store','src/main/res_view_model_event_bus']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
}

dependencies {
    implementation rootProject.ext.dependency.androidxCoreKtx
    implementation rootProject.ext.dependency.androidxAppcompat
    implementation rootProject.ext.dependency.material
    implementation rootProject.ext.dependency.androidxActivity
    implementation rootProject.ext.dependency.androidxActivityKtx
    implementation rootProject.ext.dependency.androidxFragment
    implementation rootProject.ext.dependency.androidxFragmentKtx

    implementation rootProject.ext.dependency.androidxConstraintlayout
    implementation rootProject.ext.dependency.lifecycleRuntimeKtx
    implementation rootProject.ext.dependency.lifecycleService
    implementation rootProject.ext.dependency.lifecycleLivedataKtx
    implementation rootProject.ext.dependency.datastorePreferences
    implementation rootProject.ext.dependency.datastorePreferencesCore
    implementation rootProject.ext.dependency.datastore
    implementation rootProject.ext.dependency.datastoreCore
    implementation rootProject.ext.dependency.protobufJavalite

    implementation project(":lab_base")

}

protobuf {
    protoc {
        //m1电脑适配环境
        if (osdetector.os == "osx") {
            artifact = "com.google.protobuf:protoc:3.10.0:osx-x86_64"
        } else {
            artifact = "com.google.protobuf:protoc:3.10.0"
        }
    }

    // 为该项目中的 Protobufs 生成 java Protobuf-lite 代码。
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}